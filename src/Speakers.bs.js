// Generated by BUCKLESCRIPT VERSION 4.0.5, PLEASE EDIT WITH CARE
'use strict';

var Css = require("bs-css/src/Css.js");
var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Image = require("./Image.bs.js");
var React = require("react");
var Belt_Array = require("bs-platform/lib/js/belt_Array.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var MeetupInformationJs = require("./MeetupInformation.js");

function infoToJs(param) {
  return {
          date: param[/* date */0],
          time: param[/* time */1],
          location: param[/* location */2]
        };
}

function infoFromJs(param) {
  return /* record */[
          /* date */param.date,
          /* time */param.time,
          /* location */param.location
        ];
}

function speakerToJs(param) {
  return {
          name: param[/* name */0],
          talk: param[/* talk */1],
          image: param[/* image */2]
        };
}

function speakerFromJs(param) {
  return /* record */[
          /* name */param.name,
          /* talk */param.talk,
          /* image */param.image
        ];
}

var component = ReasonReact.reducerComponent("Speakers");

function make(speakers, _) {
  var renderSpeaker = function (param) {
    return React.createElement("div", {
                className: Css.style(/* :: */[
                      Css.display(/* flex */-1010954439),
                      /* :: */[
                        Css.alignItems(/* center */98248149),
                        /* :: */[
                          Css.justifyContent(/* center */98248149),
                          /* :: */[
                            Css.flexDirection(/* column */-963948842),
                            /* :: */[
                              Css.padding(Css.px(20)),
                              /* :: */[
                                Css.margin(Css.px(20)),
                                /* :: */[
                                  Css.backgroundColor(Css.hex("dadada")),
                                  /* :: */[
                                    Css.borderRadius(Css.px(10)),
                                    /* :: */[
                                      Css.width(Css.px(400)),
                                      /* [] */0
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ])
              }, React.createElement("div", {
                    className: Css.style(/* :: */[
                          Css.margin(Css.px(5)),
                          /* [] */0
                        ])
                  }, "Name: ", React.createElement("strong", undefined, param[/* name */0])), React.createElement("div", {
                    className: Css.style(/* :: */[
                          Css.margin(Css.px(5)),
                          /* [] */0
                        ])
                  }, "Talk: ", React.createElement("strong", undefined, param[/* talk */1])), React.createElement("div", {
                    className: Css.style(/* :: */[
                          Css.margin(Css.px(5)),
                          /* [] */0
                        ])
                  }, ReasonReact.element(undefined, undefined, Image.make(param[/* image */2], /* array */[]))));
  };
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (param) {
              var send = param[/* send */3];
              var match = infoFromJs(MeetupInformationJs.default());
              return React.createElement("div", {
                          className: Css.style(/* :: */[
                                Css.display(/* flex */-1010954439),
                                /* :: */[
                                  Css.alignItems(/* center */98248149),
                                  /* :: */[
                                    Css.justifyContent(/* center */98248149),
                                    /* :: */[
                                      Css.flexDirection(/* column */-963948842),
                                      /* [] */0
                                    ]
                                  ]
                                ]
                              ])
                        }, React.createElement("div", {
                              className: Css.style(/* :: */[
                                    Css.margin(Css.px(5)),
                                    /* [] */0
                                  ])
                            }, React.createElement("button", {
                                  className: Css.style(/* :: */[
                                        Css.padding(Css.px(8)),
                                        /* :: */[
                                          Css.margin(Css.px(5)),
                                          /* [] */0
                                        ]
                                      ]),
                                  onClick: (function () {
                                      return Curry._1(send, /* SubtractAttendee */1);
                                    })
                                }, "-"), "Attendees: ", React.createElement("strong", undefined, String(param[/* state */1][/* attendees */0])), React.createElement("button", {
                                  className: Css.style(/* :: */[
                                        Css.padding(Css.px(8)),
                                        /* :: */[
                                          Css.margin(Css.px(5)),
                                          /* [] */0
                                        ]
                                      ]),
                                  onClick: (function () {
                                      return Curry._1(send, /* AddAttendee */0);
                                    })
                                }, "+")), React.createElement("div", undefined, React.createElement("div", {
                                  className: Css.style(/* :: */[
                                        Css.margin(Css.px(5)),
                                        /* [] */0
                                      ])
                                }, "Date: ", React.createElement("strong", undefined, match[/* date */0])), React.createElement("div", {
                                  className: Css.style(/* :: */[
                                        Css.margin(Css.px(5)),
                                        /* [] */0
                                      ])
                                }, "Time: ", React.createElement("strong", undefined, match[/* time */1])), React.createElement("div", {
                                  className: Css.style(/* :: */[
                                        Css.margin(Css.px(5)),
                                        /* [] */0
                                      ])
                                }, "Location: ", React.createElement("strong", undefined, match[/* location */2]))), Belt_Array.map(speakers, renderSpeaker));
            }),
          /* initialState */(function () {
              return /* record */[/* attendees */0];
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (action, state) {
              if (action) {
                return /* Update */Block.__(0, [/* record */[/* attendees */state[/* attendees */0] - 1 | 0]]);
              } else {
                return /* Update */Block.__(0, [/* record */[/* attendees */state[/* attendees */0] + 1 | 0]]);
              }
            }),
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

var $$default = ReasonReact.wrapReasonForJs(component, (function (jsProps) {
        var speakers = Belt_Array.map(jsProps.speakers, speakerFromJs);
        return make(speakers, /* array */[]);
      }));

exports.infoToJs = infoToJs;
exports.infoFromJs = infoFromJs;
exports.speakerToJs = speakerToJs;
exports.speakerFromJs = speakerFromJs;
exports.component = component;
exports.make = make;
exports.$$default = $$default;
exports.default = $$default;
exports.__esModule = true;
/* component Not a pure module */
